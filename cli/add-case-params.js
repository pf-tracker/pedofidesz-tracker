#!/usr/bin/env node

const fs = require('fs');
const path = require('path');

const dataPath = path.join(__dirname, '../data/cases.json');

function addCaseWithParams() {
  // Parancssori argumentumok beolvas√°sa
  const args = process.argv.slice(2);
  
  // Haszn√°lati √∫tmutat√≥
  if (args.length === 0 || args.includes('--help') || args.includes('-h')) {
    console.log('üîÑ Fidesz pedofil botr√°ny hozz√°ad√°sa param√©terekkel\n');
    console.log('Haszn√°lat:');
    console.log('  node cli/add-case-params.js "Cikk c√≠me" "√ñsszefoglal√≥" "URL" "YYYY-MM-DD" "Elk√∂vet≈ë" "Helysz√≠n"\n');
    console.log('P√©lda:');
    console.log('  node cli/add-case-params.js "Csokonai botr√°ny" "Tan√°r zaklatta di√°kot" "https://example.com" "2025-06-18" "J. D√°niel" "Debrecen"\n');
    console.log('\nVagy interakt√≠v m√≥d:');
    console.log('  node cli/add-case-params.js --interactive\n');
    return;
  }

  // Interakt√≠v m√≥d
  if (args.includes('--interactive') || args.includes('-i')) {
    const { spawn } = require('child_process');
    spawn('node', ['cli/add-case.js'], { stdio: 'inherit' });
    return;
  }

  // Param√©terek ellen≈ërz√©se
  if (args.length < 6) {
    console.log('‚ùå Hi√°nyz√≥ param√©terek!');
    console.log('Sz√ºks√©ges: c√≠m, √∂sszefoglal√≥, URL, d√°tum, elk√∂vet≈ë, helysz√≠n');
    console.log('Haszn√°lat: node cli/add-case-params.js "c√≠m" "√∂sszefoglal√≥" "URL" "YYYY-MM-DD" "elk√∂vet≈ë" "helysz√≠n"');
    process.exit(1);
  }

  const [title, summary, sourceUrl, date, perpetrator, location] = args;

  // D√°tum valid√°l√°sa
  const dateRegex = /^\d{4}-\d{2}-\d{2}$/;
  if (!dateRegex.test(date)) {
    console.log('‚ùå Hib√°s d√°tum form√°tum! Haszn√°lj YYYY-MM-DD form√°tumot.');
    process.exit(1);
  }

  // URL valid√°l√°sa
  if (!sourceUrl.startsWith('http')) {
    console.log('‚ùå Hib√°s URL! Az URL http:// vagy https://-val kell kezd≈ëdnie.');
    process.exit(1);
  }

  try {
    // Adatok beolvas√°sa
    let data = { cases: [], lastUpdated: new Date().toISOString() };
    if (fs.existsSync(dataPath)) {
      data = JSON.parse(fs.readFileSync(dataPath, 'utf8'));
    }

    // √öj eset hozz√°ad√°sa
    const newCase = {
      id: Date.now().toString(),
      title: title.trim(),
      summary: summary.trim(),
      sourceUrl: sourceUrl.trim(),
      date: date,
      perpetrator: perpetrator.trim() || 'Ismeretlen',
      location: location.trim() || 'Ismeretlen',
      addedAt: new Date().toISOString()
    };

    data.cases.push(newCase);
    data.lastUpdated = new Date().toISOString();

    // D√°tum szerint rendez√©s (leg√∫jabb el≈ël)
    data.cases.sort((a, b) => new Date(b.date) - new Date(a.date));

    // Ment√©s
    fs.writeFileSync(dataPath, JSON.stringify(data, null, 2));

    console.log('‚úÖ Esem√©ny sikeresen hozz√°adva!');
    console.log(`üìä √ñsszesen ${data.cases.length} eset van nyilv√°ntartva.`);
    console.log('\nüìù Hozz√°adott eset:');
    console.log(`   C√≠m: ${newCase.title}`);
    console.log(`   D√°tum: ${newCase.date}`);
    console.log(`   Elk√∂vet≈ë: ${newCase.perpetrator}`);
    console.log(`   Helysz√≠n: ${newCase.location}`);

  } catch (error) {
    console.error('‚ùå Hiba t√∂rt√©nt:', error.message);
    process.exit(1);
  }
}

addCaseWithParams(); 