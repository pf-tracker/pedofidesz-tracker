#!/usr/bin/env node

const fs = require('fs');
const path = require('path');
const readline = require('readline');

const rl = readline.createInterface({
  input: process.stdin,
  output: process.stdout
});

const dataPath = path.join(__dirname, '../data/cases.json');

function question(prompt) {
  return new Promise((resolve) => {
    rl.question(prompt, resolve);
  });
}

async function deleteCase() {
  try {
    if (!fs.existsSync(dataPath)) {
      console.log('‚ùå Nincs m√©g adat a rendszerben.');
      rl.close();
      return;
    }
    
    const data = JSON.parse(fs.readFileSync(dataPath, 'utf8'));
    
    if (data.cases.length === 0) {
      console.log('üì≠ Nincs m√©g eset nyilv√°ntartva.');
      rl.close();
      return;
    }
    
    console.log('üóëÔ∏è  Esem√©ny t√∂rl√©se\n');
    
    // Esem√©nyek list√°z√°sa
    console.log('El√©rhet≈ë esem√©nyek:');
    data.cases.forEach((case_, index) => {
      console.log(`${index + 1}. [${case_.id}] ${case_.title} (${case_.date})`);
    });
    
    const caseId = await question('\nüÜî T√∂rlend≈ë esem√©ny ID-ja: ');
    
    const caseIndex = data.cases.findIndex(c => c.id === caseId);
    
    if (caseIndex === -1) {
      console.log('‚ùå Nem tal√°lhat√≥ esem√©ny ezzel az ID-val!');
      rl.close();
      return;
    }
    
    const caseToDelete = data.cases[caseIndex];
    
    console.log(`\n‚ö†Ô∏è  T√∂rlend≈ë esem√©ny:`);
    console.log(`   C√≠m: ${caseToDelete.title}`);
    console.log(`   D√°tum: ${caseToDelete.date}`);
    console.log(`   Elk√∂vet≈ë: ${caseToDelete.perpetrator}`);
    
    const confirm = await question('\n‚ùì Biztosan t√∂r√∂lni szeretn√©d? (igen/nem): ');
    
    if (confirm.toLowerCase() !== 'igen' && confirm.toLowerCase() !== 'i') {
      console.log('‚ùå T√∂rl√©s megszak√≠tva.');
      rl.close();
      return;
    }
    
    // T√∂rl√©s
    data.cases.splice(caseIndex, 1);
    data.lastUpdated = new Date().toISOString();
    
    fs.writeFileSync(dataPath, JSON.stringify(data, null, 2));
    
    console.log('‚úÖ Esem√©ny sikeresen t√∂r√∂lve!');
    console.log(`üìä Maradt ${data.cases.length} eset nyilv√°ntartva.`);
    
  } catch (error) {
    console.error('‚ùå Hiba t√∂rt√©nt:', error.message);
  } finally {
    rl.close();
  }
}

deleteCase(); 